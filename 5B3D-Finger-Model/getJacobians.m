%% 5B3D-Finger-Model: Main
%% Author: Alexander B. Ambrose
%% Date: 8-6-2025

%% Description:
% The getJacobians function return the jacobian for the following points:
%   p_1 -> the contact point on the proximal link of the finger
%   p_2 -> the contact point on the distal link of the finger
%   p_c -> the point here the compression spring is truncated

%% This function takes in the following inputs:
%   param -> the structure of parameters to update
%   t_1_ -> angle \theta_1 (scalar)
%   t_2_ -> angle \theta_2 (scalar)
%   t_3_ -> angle \theta_3 (scalar)

function Jac = getJacobians(param, t_1_, t_2_, t_3_)
    J1 = ...
        [-param.p1.*sin(t_1_) - ...
                param.t*cos(t_1_), 0; ...
          param.p1.*cos(t_1_) - ...
                param.t*sin(t_1_), 0];

    J2 = ...
        [-param.a.*sin(t_1_) - ...
            param.p2.*sin(t_1_ + ...
            t_2_) - param.t.*cos(t_1_ + ...
            t_2_), ...
        -param.p2.*sin(t_1_ + ...
            t_2_) - param.t.*cos(t_1_ + ...
            t_2_); ...
        param.a.*cos(t_1_) + param.p2.*cos(...
            t_1_ + t_2_) - ...
            param.t.*sin(t_1_ + t_2_), ...
        param.p2.*cos(t_1_ + ...
            t_2_) - param.t.*sin(t_1_ + ...
            t_2_)];


    beta = t_1_ + t_2_ - param.alpha;
    JC = ...
        [-param.a.*sin(t_1_) - param.b.*sin(beta), ...
        -param.b.*sin(beta); ...
        param.a*cos(t_1_) + param.b.*cos(beta), ...
        param.b.*cos(beta)];

    Jac.J1 = J1;
    Jac.J2 = J2;
    Jac.JC = JC;
end